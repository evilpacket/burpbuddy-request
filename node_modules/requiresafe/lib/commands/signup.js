/*
Walk through the requireSafe(+) signup process. Get more information at https://requiresafe.com
*/
var inquirer = require('inquirer');
var chalk = require('chalk');
var isEmail = require('is-email');
var omit = require('amp-omit');
var updateConfig = require('../update-config');


function required(value) {
    return !!value.trim() || chalk.red('required');
}


module.exports = function (config, callback) {
    var signupToken = '';
    var questions = [
        {
            name: 'email',
            message: 'Your email (will be confirmed)',
            validate: function (value) {
                var done = this.async();
                // quick/loose email check
                if (!isEmail(value)) {
                    return done('invalid email');
                }

                config.api.signup({ email: value }, function (err) {
                    if (err) {
                        console.log(err);
                        done(false);
                    } else {
                        done(true);
                    }
                });

            }
        },
        {
            name: 'signupToken',
            message: 'Please enter signup token from confirmation email',
            validate: required
        },
        {
            name: 'name',
            message: 'Your name',
            validate: required
        },
        {
            name: 'password',
            message: 'pick a password',
            validate: required,
            type: 'password'
        }
    ];

    inquirer.prompt(questions, function (answers) {
        // attempt to save username to config for future use
        // without the password, of course
        updateConfig(omit(answers, 'password'), function (err) {
            if (err) {
                return console.log(err);
            }

            // tack on expires false for long login
            answers.expires = false;

            config.api.createUser(answers.signupToken, omit(answers, 'signupToken'), function (err, data) {
                if (err) {
                    return console.log('error', err);
                }

                var token = data.authToken;
                updateConfig({
                    token: token,
                    signupToken: ''
                }, function () {
                    if (err) {
                        return callback(err);
                    }
                    callback(null, chalk.green('âœ” Account registered for ' + answers.email));
                });
            });
        });
    });
}
;
